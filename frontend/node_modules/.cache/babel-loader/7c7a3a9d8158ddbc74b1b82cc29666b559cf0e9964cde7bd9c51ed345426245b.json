{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  withCredentials: false\n});\nconst api = {\n  // Projects\n  getProjects: params => client.get('/api/projects', {\n    params\n  }),\n  getProject: id => client.get(`/api/projects/${id}`),\n  // Bookmarks (now scoped to a user)\n  getBookmarks: userId => client.get('/api/bookmarks', {\n    params: {\n      user_id: userId\n    }\n  }),\n  addBookmark: (userId, project) => client.post('/api/bookmarks', {\n    user_id: userId,\n    project_id: project.id,\n    project\n  }),\n  removeBookmark: (userId, projectId) => client.delete('/api/bookmarks', {\n    params: {\n      user_id: userId,\n      project_id: projectId\n    }\n  }),\n  // Recommendations\n  recommend: userProfile => client.post('/api/recommend', userProfile),\n  // GitHub sync\n  syncGitHub: () => client.post('/api/github/sync'),\n  // Auth (if used)\n  login: creds => client.post('/api/auth/login', creds),\n  logout: () => client.post('/api/auth/logout'),\n  getProfile: () => client.get('/api/auth/profile')\n};\nexport default api;","map":{"version":3,"names":["axios","client","create","baseURL","process","env","REACT_APP_API_URL","timeout","withCredentials","api","getProjects","params","get","getProject","id","getBookmarks","userId","user_id","addBookmark","project","post","project_id","removeBookmark","projectId","delete","recommend","userProfile","syncGitHub","login","creds","logout","getProfile"],"sources":["/home/kali/Open_Source_Project_Finder/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  withCredentials: false\n});\n\nconst api = {\n  // Projects\n  getProjects: params => client.get('/api/projects', { params }),\n  getProject: id => client.get(`/api/projects/${id}`),\n\n  // Bookmarks (now scoped to a user)\n  getBookmarks: userId =>\n    client.get('/api/bookmarks', { params: { user_id: userId } }),\n\n  addBookmark: (userId, project) =>\n    client.post('/api/bookmarks', {\n      user_id: userId,\n      project_id: project.id,\n      project\n    }),\n\n  removeBookmark: (userId, projectId) =>\n    client.delete('/api/bookmarks', {\n      params: { user_id: userId, project_id: projectId }\n    }),\n\n  // Recommendations\n  recommend: userProfile => client.post('/api/recommend', userProfile),\n\n  // GitHub sync\n  syncGitHub: () => client.post('/api/github/sync'),\n\n  // Auth (if used)\n  login: creds => client.post('/api/auth/login', creds),\n  logout: () => client.post('/api/auth/logout'),\n  getProfile: () => client.get('/api/auth/profile')\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAG;EACV;EACAC,WAAW,EAAEC,MAAM,IAAIV,MAAM,CAACW,GAAG,CAAC,eAAe,EAAE;IAAED;EAAO,CAAC,CAAC;EAC9DE,UAAU,EAAEC,EAAE,IAAIb,MAAM,CAACW,GAAG,CAAC,iBAAiBE,EAAE,EAAE,CAAC;EAEnD;EACAC,YAAY,EAAEC,MAAM,IAClBf,MAAM,CAACW,GAAG,CAAC,gBAAgB,EAAE;IAAED,MAAM,EAAE;MAAEM,OAAO,EAAED;IAAO;EAAE,CAAC,CAAC;EAE/DE,WAAW,EAAEA,CAACF,MAAM,EAAEG,OAAO,KAC3BlB,MAAM,CAACmB,IAAI,CAAC,gBAAgB,EAAE;IAC5BH,OAAO,EAAED,MAAM;IACfK,UAAU,EAAEF,OAAO,CAACL,EAAE;IACtBK;EACF,CAAC,CAAC;EAEJG,cAAc,EAAEA,CAACN,MAAM,EAAEO,SAAS,KAChCtB,MAAM,CAACuB,MAAM,CAAC,gBAAgB,EAAE;IAC9Bb,MAAM,EAAE;MAAEM,OAAO,EAAED,MAAM;MAAEK,UAAU,EAAEE;IAAU;EACnD,CAAC,CAAC;EAEJ;EACAE,SAAS,EAAEC,WAAW,IAAIzB,MAAM,CAACmB,IAAI,CAAC,gBAAgB,EAAEM,WAAW,CAAC;EAEpE;EACAC,UAAU,EAAEA,CAAA,KAAM1B,MAAM,CAACmB,IAAI,CAAC,kBAAkB,CAAC;EAEjD;EACAQ,KAAK,EAAEC,KAAK,IAAI5B,MAAM,CAACmB,IAAI,CAAC,iBAAiB,EAAES,KAAK,CAAC;EACrDC,MAAM,EAAEA,CAAA,KAAM7B,MAAM,CAACmB,IAAI,CAAC,kBAAkB,CAAC;EAC7CW,UAAU,EAAEA,CAAA,KAAM9B,MAAM,CAACW,GAAG,CAAC,mBAAmB;AAClD,CAAC;AAED,eAAeH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}