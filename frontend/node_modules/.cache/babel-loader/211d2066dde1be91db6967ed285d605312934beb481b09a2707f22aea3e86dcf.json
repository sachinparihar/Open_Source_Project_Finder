{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  withCredentials: false\n});\nconst api = {\n  // Projects\n  getProjects(params) {\n    return client.get('/api/projects', {\n      params\n    });\n  },\n  getProject(id) {\n    return client.get(`/api/projects/${id}`);\n  },\n  // Bookmarks\n  getBookmarks() {\n    return client.get('/api/bookmarks');\n  },\n  addBookmark(projectId) {\n    return client.post('/api/bookmarks', {\n      project_id: projectId\n    });\n  },\n  removeBookmark(bookmarkId) {\n    return client.delete(`/api/bookmarks/${bookmarkId}`);\n  },\n  // Recommendations\n\n  // GitHub sync\n  syncGitHub() {\n    return client.post('/api/github/sync');\n  },\n  // Auth\n  login() {\n    return client.post('/api/auth/login');\n  },\n  logout() {\n    return client.post('/api/auth/logout');\n  },\n  getProfile() {\n    return client.get('/api/auth/profile');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","client","create","baseURL","process","env","REACT_APP_API_URL","timeout","withCredentials","api","getProjects","params","get","getProject","id","getBookmarks","addBookmark","projectId","post","project_id","removeBookmark","bookmarkId","delete","syncGitHub","login","logout","getProfile"],"sources":["/home/kali/Open_Source_Project_Finder/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  withCredentials: false\n});\n\nconst api = {\n  // Projects\n  getProjects(params) {\n    return client.get('/api/projects', { params });\n  },\n  getProject(id) {\n    return client.get(`/api/projects/${id}`);\n  },\n\n  // Bookmarks\n  getBookmarks() {\n    return client.get('/api/bookmarks');\n  },\n  addBookmark(projectId) {\n    return client.post('/api/bookmarks', { project_id: projectId });\n  },\n  removeBookmark(bookmarkId) {\n    return client.delete(`/api/bookmarks/${bookmarkId}`);\n  },\n\n  // Recommendations\n  \n  // GitHub sync\n  syncGitHub() {\n    return client.post('/api/github/sync');\n  },\n\n  // Auth\n  login() {\n    return client.post('/api/auth/login');\n  },\n  logout() {\n    return client.post('/api/auth/logout');\n  },\n  getProfile() {\n    return client.get('/api/auth/profile');\n  }\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAG;EACV;EACAC,WAAWA,CAACC,MAAM,EAAE;IAClB,OAAOV,MAAM,CAACW,GAAG,CAAC,eAAe,EAAE;MAAED;IAAO,CAAC,CAAC;EAChD,CAAC;EACDE,UAAUA,CAACC,EAAE,EAAE;IACb,OAAOb,MAAM,CAACW,GAAG,CAAC,iBAAiBE,EAAE,EAAE,CAAC;EAC1C,CAAC;EAED;EACAC,YAAYA,CAAA,EAAG;IACb,OAAOd,MAAM,CAACW,GAAG,CAAC,gBAAgB,CAAC;EACrC,CAAC;EACDI,WAAWA,CAACC,SAAS,EAAE;IACrB,OAAOhB,MAAM,CAACiB,IAAI,CAAC,gBAAgB,EAAE;MAAEC,UAAU,EAAEF;IAAU,CAAC,CAAC;EACjE,CAAC;EACDG,cAAcA,CAACC,UAAU,EAAE;IACzB,OAAOpB,MAAM,CAACqB,MAAM,CAAC,kBAAkBD,UAAU,EAAE,CAAC;EACtD,CAAC;EAED;;EAEA;EACAE,UAAUA,CAAA,EAAG;IACX,OAAOtB,MAAM,CAACiB,IAAI,CAAC,kBAAkB,CAAC;EACxC,CAAC;EAED;EACAM,KAAKA,CAAA,EAAG;IACN,OAAOvB,MAAM,CAACiB,IAAI,CAAC,iBAAiB,CAAC;EACvC,CAAC;EACDO,MAAMA,CAAA,EAAG;IACP,OAAOxB,MAAM,CAACiB,IAAI,CAAC,kBAAkB,CAAC;EACxC,CAAC;EACDQ,UAAUA,CAAA,EAAG;IACX,OAAOzB,MAAM,CAACW,GAAG,CAAC,mBAAmB,CAAC;EACxC;AACF,CAAC;AAED,eAAeH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}