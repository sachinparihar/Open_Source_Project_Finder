{"ast":null,"code":"var _jsxFileName = \"/home/kali/Open_Source_Project_Finder/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as msal from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst msalConfig = {\n  auth: {\n    clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\n    authority: `https://login.microsoftonline.com/${process.env.REACT_APP_AZURE_TENANT_ID}`,\n    redirectUri: window.location.origin\n  }\n};\nconst msalInstance = new msal.PublicClientApplication(msalConfig);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [account, setAccount] = useState(null);\n  useEffect(() => {\n    const accounts = msalInstance.getAllAccounts();\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n    }\n  }, []);\n  const login = async () => {\n    try {\n      const loginResponse = await msalInstance.loginPopup({\n        scopes: ['openid', 'profile', 'email']\n      });\n      setAccount(loginResponse.account);\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  const logout = () => {\n    msalInstance.logoutPopup();\n    setAccount(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      account,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"86F8VZ8lfjh6tQB+p37fx1M0D7Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","msal","jsxDEV","_jsxDEV","AuthContext","msalConfig","auth","clientId","process","env","REACT_APP_AZURE_CLIENT_ID","authority","REACT_APP_AZURE_TENANT_ID","redirectUri","window","location","origin","msalInstance","PublicClientApplication","AuthProvider","children","_s","account","setAccount","accounts","getAllAccounts","length","login","loginResponse","loginPopup","scopes","error","console","logout","logoutPopup","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/kali/Open_Source_Project_Finder/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as msal from '@azure/msal-browser';\n\nconst AuthContext = createContext();\n\nconst msalConfig = {\n  auth: {\n    clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\n    authority: `https://login.microsoftonline.com/${process.env.REACT_APP_AZURE_TENANT_ID}`,\n    redirectUri: window.location.origin,\n  },\n};\n\nconst msalInstance = new msal.PublicClientApplication(msalConfig);\n\nexport const AuthProvider = ({ children }) => {\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    const accounts = msalInstance.getAllAccounts();\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n    }\n  }, []);\n\n  const login = async () => {\n    try {\n      const loginResponse = await msalInstance.loginPopup({\n        scopes: ['openid', 'profile', 'email'],\n      });\n      setAccount(loginResponse.account);\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  const logout = () => {\n    msalInstance.logoutPopup();\n    setAccount(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ account, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAO,KAAKC,IAAI,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,UAAU,GAAG;EACjBC,IAAI,EAAE;IACJC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;IAC/CC,SAAS,EAAE,qCAAqCH,OAAO,CAACC,GAAG,CAACG,yBAAyB,EAAE;IACvFC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC;EAC/B;AACF,CAAC;AAED,MAAMC,YAAY,GAAG,IAAIhB,IAAI,CAACiB,uBAAuB,CAACb,UAAU,CAAC;AAEjE,OAAO,MAAMc,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAGP,YAAY,CAACQ,cAAc,CAAC,CAAC;IAC9C,IAAID,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;MACvBH,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMX,YAAY,CAACY,UAAU,CAAC;QAClDC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO;MACvC,CAAC,CAAC;MACFP,UAAU,CAACK,aAAa,CAACN,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACiB,WAAW,CAAC,CAAC;IAC1BX,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAEd,OAAO;MAAEK,KAAK;MAAEM;IAAO,CAAE;IAAAb,QAAA,EACrDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CA/BWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAiCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACuC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}