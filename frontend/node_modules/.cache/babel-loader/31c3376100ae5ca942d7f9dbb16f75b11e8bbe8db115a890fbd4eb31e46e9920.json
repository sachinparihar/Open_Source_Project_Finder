{"ast":null,"code":"var _jsxFileName = \"/home/kali/Open_Source_Project_Finder/frontend/src/pages/SearchPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SearchPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../Styles/SearchPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  // Add these states at the top\n  const [language, setLanguage] = useState('');\n  const [topic, setTopic] = useState('');\n\n  // Update the axios.get call:\n  axios.get(`${process.env.REACT_APP_API_URL}/api/projects`, {\n    params: {\n      q: query,\n      language,\n      topic\n    }\n  }).then(res => setResults(res.data)).catch(console.error);\n\n  // Add dropdowns or chips in your JSX:\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"e.g. kubernetes\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: language,\n      onChange: e => setLanguage(e.target.value),\n      placeholder: \"Language (e.g. Go)\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: topic,\n      onChange: e => setTopic(e.target.value),\n      placeholder: \"Topic (e.g. cloud)\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 1\n  }, this);\n};\n_s(SearchPage, \"lnBDIR4lCd9QpikrYRFz3d8V8yA=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SearchPage","_s","language","setLanguage","topic","setTopic","get","process","env","REACT_APP_API_URL","params","q","query","then","res","setResults","data","catch","console","error","className","children","type","value","onChange","e","setQuery","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kali/Open_Source_Project_Finder/frontend/src/pages/SearchPage.js"],"sourcesContent":["// src/pages/SearchPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../Styles/SearchPage.css';\n\nconst SearchPage = () => {\n  // Add these states at the top\nconst [language, setLanguage] = useState('');\nconst [topic, setTopic] = useState('');\n\n// Update the axios.get call:\naxios.get(`${process.env.REACT_APP_API_URL}/api/projects`, {\n  params: { q: query, language, topic }\n})\n.then(res => setResults(res.data))\n.catch(console.error);\n\n// Add dropdowns or chips in your JSX:\n<div className=\"search-bar\">\n  <input\n    type=\"text\"\n    value={query}\n    onChange={e => setQuery(e.target.value)}\n    placeholder=\"e.g. kubernetes\"\n    className=\"search-input\"\n  />\n  <input\n    type=\"text\"\n    value={language}\n    onChange={e => setLanguage(e.target.value)}\n    placeholder=\"Language (e.g. Go)\"\n    className=\"search-input\"\n  />\n  <input\n    type=\"text\"\n    value={topic}\n    onChange={e => setTopic(e.target.value)}\n    placeholder=\"Topic (e.g. cloud)\"\n    className=\"search-input\"\n  />\n</div>};\n\nexport default SearchPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAE,KAAK,CAACS,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,eAAe,EAAE;IACzDC,MAAM,EAAE;MAAEC,CAAC,EAAEC,KAAK;MAAEV,QAAQ;MAAEE;IAAM;EACtC,CAAC,CAAC,CACDS,IAAI,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;;EAErB;EACA,aAAApB,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEX,KAAM;MACbY,QAAQ,EAAEC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;MACxCK,WAAW,EAAC,iBAAiB;MAC7BR,SAAS,EAAC;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFjC,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,QAAS;MAChBsB,QAAQ,EAAEC,CAAC,IAAItB,WAAW,CAACsB,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;MAC3CK,WAAW,EAAC,oBAAoB;MAChCR,SAAS,EAAC;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFjC,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAEC,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;MACxCK,WAAW,EAAC,oBAAoB;MAChCR,SAAS,EAAC;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAAA,CAAC;AAAC/B,EAAA,CAnCFD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}