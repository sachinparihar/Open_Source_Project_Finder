{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  withCredentials: false\n});\nconst api = {\n  // Projects - now accepts userId to include bookmark status\n  getProjects: (params, userId = null) => {\n    const searchParams = {\n      ...params\n    };\n    if (userId) {\n      searchParams.user_id = userId;\n    }\n    return client.get('/api/projects', {\n      params: searchParams\n    });\n  },\n  getProject: id => client.get(`/api/projects/${id}`),\n  // Bookmarks (now scoped to a user)\n  getBookmarks: userId => client.get('/api/bookmarks', {\n    params: {\n      user_id: userId\n    }\n  }),\n  addBookmark: (userId, project) => client.post('/api/bookmarks', {\n    user_id: userId,\n    project_id: project.id || project.url,\n    project\n  }),\n  removeBookmark: (userId, projectId) => client.delete('/api/bookmarks', {\n    params: {\n      user_id: userId,\n      project_id: projectId\n    }\n  }),\n  // Recommendations\n  recommend: (userProfile, userId = null) => {\n    const url = userId ? `/api/recommend?user_id=${userId}` : '/api/recommend';\n    return client.post(url, userProfile);\n  },\n  // GitHub sync\n  syncGitHub: () => client.post('/api/github/sync'),\n  // Auth (if used)\n  login: creds => client.post('/api/auth/login', creds),\n  logout: () => client.post('/api/auth/logout'),\n  getProfile: () => client.get('/api/auth/profile')\n};\nexport default api;","map":{"version":3,"names":["axios","client","create","baseURL","process","env","REACT_APP_API_URL","timeout","withCredentials","api","getProjects","params","userId","searchParams","user_id","get","getProject","id","getBookmarks","addBookmark","project","post","project_id","url","removeBookmark","projectId","delete","recommend","userProfile","syncGitHub","login","creds","logout","getProfile"],"sources":["/home/kali/Open_Source_Project_Finder/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  withCredentials: false\n});\n\nconst api = {\n  // Projects - now accepts userId to include bookmark status\n  getProjects: (params, userId = null) => {\n    const searchParams = { ...params };\n    if (userId) {\n      searchParams.user_id = userId;\n    }\n    return client.get('/api/projects', { params: searchParams });\n  },\n  \n  getProject: id => client.get(`/api/projects/${id}`),\n\n  // Bookmarks (now scoped to a user)\n  getBookmarks: userId =>\n    client.get('/api/bookmarks', { params: { user_id: userId } }),\n\n  addBookmark: (userId, project) =>\n    client.post('/api/bookmarks', {\n      user_id: userId,\n      project_id: project.id || project.url,\n      project\n    }),\n\n  removeBookmark: (userId, projectId) =>\n    client.delete('/api/bookmarks', {\n      params: { user_id: userId, project_id: projectId }\n    }),\n\n  // Recommendations\n  recommend: (userProfile, userId = null) => {\n    const url = userId ? `/api/recommend?user_id=${userId}` : '/api/recommend';\n    return client.post(url, userProfile);\n  },\n\n  // GitHub sync\n  syncGitHub: () => client.post('/api/github/sync'),\n\n  // Auth (if used)\n  login: creds => client.post('/api/auth/login', creds),\n  logout: () => client.post('/api/auth/logout'),\n  getProfile: () => client.get('/api/auth/profile')\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAG;EACV;EACAC,WAAW,EAAEA,CAACC,MAAM,EAAEC,MAAM,GAAG,IAAI,KAAK;IACtC,MAAMC,YAAY,GAAG;MAAE,GAAGF;IAAO,CAAC;IAClC,IAAIC,MAAM,EAAE;MACVC,YAAY,CAACC,OAAO,GAAGF,MAAM;IAC/B;IACA,OAAOX,MAAM,CAACc,GAAG,CAAC,eAAe,EAAE;MAAEJ,MAAM,EAAEE;IAAa,CAAC,CAAC;EAC9D,CAAC;EAEDG,UAAU,EAAEC,EAAE,IAAIhB,MAAM,CAACc,GAAG,CAAC,iBAAiBE,EAAE,EAAE,CAAC;EAEnD;EACAC,YAAY,EAAEN,MAAM,IAClBX,MAAM,CAACc,GAAG,CAAC,gBAAgB,EAAE;IAAEJ,MAAM,EAAE;MAAEG,OAAO,EAAEF;IAAO;EAAE,CAAC,CAAC;EAE/DO,WAAW,EAAEA,CAACP,MAAM,EAAEQ,OAAO,KAC3BnB,MAAM,CAACoB,IAAI,CAAC,gBAAgB,EAAE;IAC5BP,OAAO,EAAEF,MAAM;IACfU,UAAU,EAAEF,OAAO,CAACH,EAAE,IAAIG,OAAO,CAACG,GAAG;IACrCH;EACF,CAAC,CAAC;EAEJI,cAAc,EAAEA,CAACZ,MAAM,EAAEa,SAAS,KAChCxB,MAAM,CAACyB,MAAM,CAAC,gBAAgB,EAAE;IAC9Bf,MAAM,EAAE;MAAEG,OAAO,EAAEF,MAAM;MAAEU,UAAU,EAAEG;IAAU;EACnD,CAAC,CAAC;EAEJ;EACAE,SAAS,EAAEA,CAACC,WAAW,EAAEhB,MAAM,GAAG,IAAI,KAAK;IACzC,MAAMW,GAAG,GAAGX,MAAM,GAAG,0BAA0BA,MAAM,EAAE,GAAG,gBAAgB;IAC1E,OAAOX,MAAM,CAACoB,IAAI,CAACE,GAAG,EAAEK,WAAW,CAAC;EACtC,CAAC;EAED;EACAC,UAAU,EAAEA,CAAA,KAAM5B,MAAM,CAACoB,IAAI,CAAC,kBAAkB,CAAC;EAEjD;EACAS,KAAK,EAAEC,KAAK,IAAI9B,MAAM,CAACoB,IAAI,CAAC,iBAAiB,EAAEU,KAAK,CAAC;EACrDC,MAAM,EAAEA,CAAA,KAAM/B,MAAM,CAACoB,IAAI,CAAC,kBAAkB,CAAC;EAC7CY,UAAU,EAAEA,CAAA,KAAMhC,MAAM,CAACc,GAAG,CAAC,mBAAmB;AAClD,CAAC;AAED,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}