{"ast":null,"code":"var _jsxFileName = \"/home/kali/Open_Source_Project_Finder/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { msalInstance, getToken } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [idToken, setIdToken] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  useEffect(() => {\n    async function init() {\n      try {\n        // Handle redirect callback if using redirect flow\n        const handleRedirect = await msalInstance.handleRedirectPromise();\n        const existingAccounts = msalInstance.getAllAccounts();\n\n        // Prefer redirect result account if available\n        const acct = (handleRedirect === null || handleRedirect === void 0 ? void 0 : handleRedirect.account) || existingAccounts[0] || null;\n        if (acct) {\n          setAccount(acct);\n          const token = await getToken();\n          setIdToken(token);\n        }\n      } catch (err) {\n        console.error('MSAL init error:', err);\n      } finally {\n        setInitialized(true);\n      }\n    }\n    init();\n  }, []);\n  const login = async () => {\n    if (!initialized) return;\n    try {\n      // Use redirect flow for reliability in browser\n      await msalInstance.loginRedirect({\n        scopes: ['openid', 'profile', 'email']\n      });\n    } catch (e) {\n      console.error('Login redirect error:', e);\n    }\n  };\n  const logout = async () => {\n    await msalInstance.logoutRedirect();\n    setAccount(null);\n    setIdToken(null);\n  };\n  if (!initialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      account,\n      idToken,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"ny4kJKGIycJdQGw8FNwb/7eRGCo=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","msalInstance","getToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","account","setAccount","idToken","setIdToken","initialized","setInitialized","init","handleRedirect","handleRedirectPromise","existingAccounts","getAllAccounts","acct","token","err","console","error","login","loginRedirect","scopes","e","logout","logoutRedirect","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/kali/Open_Source_Project_Finder/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { msalInstance, getToken } from '../services/auth';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [account, setAccount] = useState(null);\n  const [idToken, setIdToken] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      try {\n        // Handle redirect callback if using redirect flow\n        const handleRedirect = await msalInstance.handleRedirectPromise();\n        const existingAccounts = msalInstance.getAllAccounts();\n\n        // Prefer redirect result account if available\n        const acct = handleRedirect?.account || existingAccounts[0] || null;\n        if (acct) {\n          setAccount(acct);\n          const token = await getToken();\n          setIdToken(token);\n        }\n      } catch (err) {\n        console.error('MSAL init error:', err);\n      } finally {\n        setInitialized(true);\n      }\n    }\n    init();\n  }, []);\n\n  const login = async () => {\n    if (!initialized) return;\n    try {\n      // Use redirect flow for reliability in browser\n      await msalInstance.loginRedirect({\n        scopes: ['openid', 'profile', 'email'],\n      });\n    } catch (e) {\n      console.error('Login redirect error:', e);\n    }\n  };\n\n  const logout = async () => {\n    await msalInstance.logoutRedirect();\n    setAccount(null);\n    setIdToken(null);\n  };\n\n  if (!initialized) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={{ account, idToken, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,YAAY,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,eAAegB,IAAIA,CAAA,EAAG;MACpB,IAAI;QACF;QACA,MAAMC,cAAc,GAAG,MAAMf,YAAY,CAACgB,qBAAqB,CAAC,CAAC;QACjE,MAAMC,gBAAgB,GAAGjB,YAAY,CAACkB,cAAc,CAAC,CAAC;;QAEtD;QACA,MAAMC,IAAI,GAAG,CAAAJ,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEP,OAAO,KAAIS,gBAAgB,CAAC,CAAC,CAAC,IAAI,IAAI;QACnE,IAAIE,IAAI,EAAE;UACRV,UAAU,CAACU,IAAI,CAAC;UAChB,MAAMC,KAAK,GAAG,MAAMnB,QAAQ,CAAC,CAAC;UAC9BU,UAAU,CAACS,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;MACxC,CAAC,SAAS;QACRR,cAAc,CAAC,IAAI,CAAC;MACtB;IACF;IACAC,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI,CAACZ,WAAW,EAAE;IAClB,IAAI;MACF;MACA,MAAMZ,YAAY,CAACyB,aAAa,CAAC;QAC/BC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO;MACvC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVL,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEI,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAM5B,YAAY,CAAC6B,cAAc,CAAC,CAAC;IACnCpB,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,IAAI,CAACC,WAAW,EAAE;IAChB,oBAAOT,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACE9B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,OAAO;MAAEE,OAAO;MAAEc,KAAK;MAAEI;IAAO,CAAE;IAAAtB,QAAA,EAC9DA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC1B,EAAA,CAvDeF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAyD5B,OAAO,SAASgC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAOzC,UAAU,CAACO,WAAW,CAAC;AAChC;AAACkC,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}